// Functions
function slider(x, y, width, height, line_w, line_color, func, offset = 0) {
	static off = offset;
	
	draw_line_width_color(x-width/2, y, x+width/2, y, line_w, line_color, line_color);
	draw_rectangle((x+off)-4, y-height/2, (x+off)+4, y+height/2, true);
	
	var collision = (mouse_x > x-width/2 && mouse_x < x+width/2 && mouse_y > y-height/2 && mouse_y < y+height/2);
	if (collision) {
		draw_rectangle((x+off)-4, y-height/2, (x+off)+4, y+height/2, false);
		if (mouse_check_button(mb_left)) {
			off = mouse_x-x;
			func();
		}
	}
	
	return off+width/2;
}

function draw_3d(spr, x, y, xscale, yscale, rot, col, alpha) {
	for (var i = 0; i < sprite_get_number(spr); i++) {
		var yy = y-(i*10);
		draw_sprite_ext(spr, i, x, yy, xscale, yscale, rot, col, alpha);
	}
}

function button(x, y, w, h, str, c1, c2, scl, outline, func) {
	var range = (mouse_x > x && mouse_x < x+w && mouse_y > y && mouse_y < y+h);
	
	if (outline) {
		draw_rectangle_color(x, y, x+w, y+h, c2, c2, c2, c2, true);
	}
	
	draw_text_transformed_color(x+w/2, y+h/2, str, scl, scl, 0, c1, c1, c1, c1, 1);

	if (range) {
		
		draw_rectangle_color(x, y, x+w, y+h, c2, c2, c2, c2, false);
		draw_text_transformed_color(x+w/2, y+h/2, str, scl, scl, 0, c1, c1, c1, c1, 1);
		
		func();
		
	} else {
		
	}
}

function button_round(x, y, w, h, str, c1, c2, scl, outline, func, sublist) {
	var range = (mouse_x > x && mouse_x < x+w && mouse_y > y && mouse_y < y+h);
	static sublist_open = false;
	
	if (outline) {
		draw_roundrect_color(x, y, x+w, y+h, c2, c2, true);
	}
	
	draw_text_transformed_color(x+w/2, y+h/2, str, scl, scl, 0, c1, c1, c1, c1, 1);

	if (range) {
		
		draw_roundrect_color(x, y, x+w, y+h, c2, c2, false);
		draw_text_transformed_color(x+w/2, y+h/2, str, scl, scl, 0, c1, c1, c1, c1, 1);
		
		func();
		
		if (mouse_check_button_pressed(mb_right)) {
			sublist_open = !sublist_open;
			popup_x = mouse_x;
			popup_y = mouse_y;
		}
		
	} else {
	}
	
	if (sublist_open) sublist();
}

function button_round_guess(x, y, w, h, str, c1, c2, scl, outline, func, right) {
	var range = (mouse_x > x && mouse_x < x+w && mouse_y > y && mouse_y < y+h);
	var guess_c = c_red;
	
	
	if (right) guess_c = c_green;
	if (active && right) draw_roundrect_color(x, y, x+w, y+h, guess_c, guess_c, false);
	
	if (outline) {
		draw_roundrect_color(x, y, x+w, y+h, c2, c2, true);
	}
	
	draw_text_transformed_color(x+w/2, y+h/2, str, scl, scl, 0, c1, c1, c1, c1, 1);

	if (range) {
		
		if !(active)
			draw_roundrect_color(x, y, x+w, y+h, c2, c2, false);
		
		draw_text_transformed_color(x+w/2, y+h/2, str, scl, scl, 0, c1, c1, c1, c1, 1);
		
		func();
		
		if (mouse_check_button_pressed(mb_left)) {
			active = true;
		}
		
	} else {
		
	}
	
}

function circle_button(x, y, r, variable, func) {
	draw_circle(x, y, r*1.2, true);
	
	if (variable) {
		draw_circle(x, y, r*0.8, false);
	}
	
	var range = (mouse_x > x-r/2 && mouse_x < x+r/2 && mouse_y > y-r/2 && mouse_y < y+r/2);
	if (range) {
		if (mouse_check_button_pressed(mb_left)) {
			func();
		}
	}
}

function input_box(x, y, w, h, place_holder, c1, c2, scl, outline, func) {
    draw_set_halign(fa_left);
    static selected = false;

    var range = (mouse_x > x && mouse_x < x+w && mouse_y > y && mouse_y < y+h);

    if (outline) {
        draw_rectangle_color(x, y, x+w, y+h, c2, c2, c2, c2, true);
    }

    if (range) {
        if (mouse_check_button_pressed(mb_left)) {
            selected = !selected;
            keyboard_string = "";
        }
    }

    var padding = 5;
    if (selected) {
        draw_set_halign(fa_left);
        draw_rectangle_color(x+1, y+1, (x+w)-1, (y+h)-1, c3, c3, c3, c3, true);
        draw_text_transformed_color(x+padding, y+h/2, keyboard_string, scl, scl, 0, c1, c1, c1, c1, 1);
        draw_set_halign(fa_center);

        func();

        return keyboard_string;
    } else {
        draw_text_transformed_color(x+padding, y+h/2, place_holder, scl, scl, 0, c1, c1, c1, c1, 1);
    }

    draw_set_halign(fa_center);
}